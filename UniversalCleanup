#!/usr/bin/env bash

set -e
trap 'echo "An error occurred. Exiting..." >&2; exit 1' ERR

if [ "$SUDO_USER" ]; then
  REAL_HOME=$(getent passwd "$SUDO_USER" | cut -d: -f6)
else
  REAL_HOME=$HOME
fi

LOG_FILE="$REAL_HOME/update.log"
THUMBNAILS_DIR="$REAL_HOME/.thumbnails/normal"
CACHE_DIR="$REAL_HOME/.cache"
SLEEP_TIME=1

[[ $EUID -eq 0 ]] || {
  echo "You have to run as Superuser!" >&2
  exit 1
}

log_message() {
  echo "----------[ $(whoami) $(date) ]---------- $1" >>"${LOG_FILE}"
}

clean_directory() {
  local dir=$1
  [[ -n "$dir" && -d "$dir" ]] || {
    echo "Directory ${dir} not found, skipping."
    return
  }
  echo "Cleaning $dir..."
  find "${dir}" -mindepth 1 -exec rm -rf {} + 2>/dev/null
  du -sh "${dir}"
  sleep "${SLEEP_TIME}"
}

yum_operations() {
if ! command -v yum &> /dev/null; then
  echo "Neither yum is Installed!"
else
  yum update
  yum upgrade
  yum update --security
  rm -rf /var/cache/yum/*
fi
}

nix_operations() {
if ! command -v nix &> /dev/null; then
  echo "Neither nix is Installed!"
else
  nix-env -iA nixpkgs.nix
  nix-env -u '*'
  nix-channel --update
  nix-collect-garbage -d
  nix-collect-garbage --delete-old
  nix-store --gc
  nix-env --delete-generations old
fi
}


apt_operations() {
if ! command -v apt &> /dev/null && ! command -v apt-get &> /dev/null; then
  echo "Neither apt nor apt-get is installed!"
else
  log_message "Starting APT operations"
  echo 'Updating package lists...'
  apt-get update -y
  echo 'Upgrading packages...'
  apt-get upgrade -y
  apt-get full-upgrade -y
  echo 'Removing unused packages...'
  apt-get autoremove --purge -y
  echo 'Cleaning local repository of packages...'
  apt autoclean
  apt clean
  apt -s clean
  apt clean all
  apt-get clean
  apt-get autoclean
fi
}

remove_old_kernels() {
if ! command -v apt &> /dev/null && ! command -v apt-get &> /dev/null; then
  echo "Neither apt is installed!"
else
  echo 'Removing old kernels...'
  apt autoremove --purge -y
  apt-get autoremove --purge -y
fi

}

remove_old_configs() {
  for cmd in dpkg grep awk xargs; do
    if ! command -v "$cmd" &> /dev/null; then
      echo "$cmd is Missing!"
    else
      echo 'Removing old configuration files...'
      dpkg -l | grep '^rc' | awk '{print $2}' | xargs -r dpkg --purge
    fi
  done
}

clean_docker() {
  if ! command -v "docker" &> /dev/null; then
    echo "docker is Missing!"
  else
    echo 'Cleaning Docker...'
    docker system prune -a -f --volumes
  fi
}

clean_journal() {
  if ! command -v "journalctl" &> /dev/null; then
    echo "journalctl is Missing!"
  else
    echo 'Cleaning journal logs...'
    journalctl --vacuum-size=50M
  fi
}

clean_systemd_resolved() {
  if ! command -v "systemctl" &> /dev/null; then
    echo "systemctl is Missing!"
  else
    echo 'Cleaning systemd-resolved cache...'
    rm -rf /var/cache/systemd/resolved
    systemctl restart systemd-resolved
  fi
}

clean_snaps() {
  if ! command -v "snap" &> /dev/null; then
    echo "snap is Missing!"
  else
    echo 'Remove old snaps...'
    set -eu
    snap list --all | awk '/disabled/{print $1, $3}' |
        while read snapname revision; do
            sudo snap remove "$snapname" --revision="$revision"
        done
  fi
}


update_system() {
  apt_operations
  yum_operations
  nix_operations
  remove_old_kernels
  remove_old_configs
  clean_snaps

  clean_directory "${THUMBNAILS_DIR}"
  clean_directory "$REAL_HOME/.cache/thumbnails/normal"
  clean_directory "$REAL_HOME/.local/share/Trash"

  if ! pgrep -x "chrome" >/dev/null; then
    clean_directory "${CACHE_DIR}"
  else
    echo "Google Chrome is running; skipping cache cleanup."
  fi

  clean_directory "/var/cache/apt/archives"
  clean_directory "/var/tmp"
  clean_directory "/var/log"
  clean_directory "/var/backups"
  clean_directory "/root/.cache"
  rm -rf /tmp/*

  [[ "$HOME" != "/root" ]] || clean_directory "/root"

  echo 'Fixing broken packages with dpkg...'
  dpkg --configure -a
  echo 'Cleaning old logs...'
  clean_journal
  clean_docker
  clean_systemd_resolved
  df -Th | sort
}

update_system
